var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiClientService.html",[0,1.293,1,0.839]],["body/injectables/ApiClientService.html",[0,1.27,1,0.824,2,1.13,3,0.396,4,0.335,5,0.335,6,2.803,7,1.13,8,1.402,9,3.198,10,2.028,11,1.733,12,2.109,13,2.601,14,1.796,15,0.396,16,0.608,17,3.165,18,2.528,19,3.165,20,3.165,21,3.165,22,3.165,23,1.707,24,1.439,25,0.057,26,4.689,27,4.689,28,1.232,29,2.601,30,2.365,31,2.836,32,2.463,33,1.5,34,4.885,35,2.601,36,3.629,37,1.707,38,1.696,39,2.601,40,1.789,41,1.733,42,1.5,43,2.463,44,1.014,45,2.836,46,2.601,47,1.696,48,1.476,49,3.55,50,1.696,51,2.836,52,2.078,53,2.078,54,1.3,55,2.601,56,2.601,57,2.601,58,1.696,59,2.078,60,3.55,61,1.696,62,3.55,63,2.078,64,1.696,65,2.078,66,1.476,67,0.739,68,0.463,69,0.828,70,0.828,71,1.696,72,0.828,73,1.099,74,1.354,75,0.962,76,1.354,77,1.354,78,1.354,79,1.354,80,0.962,81,1.354,82,1.13,83,1.354,84,1.13,85,0.396,86,0.537,87,0.716,88,1.354,89,2.014,90,0.027,91,0.027]],["title/components/AppComponent.html",[92,0.618,93,0.723]],["body/components/AppComponent.html",[1,0.965,3,0.489,4,0.414,5,0.414,8,1.116,15,0.489,16,0.712,18,2.434,23,0.885,24,0.664,25,0.057,28,1.118,37,1.517,40,1.116,41,1.023,42,1.517,44,0.921,45,1.674,48,1.729,52,2.434,54,1.692,66,1.729,67,0.921,68,0.572,70,1.023,73,0.885,84,2.03,85,0.489,86,0.664,87,0.885,89,1.189,90,0.032,91,0.032,92,0.839,93,1.077,94,1.488,95,1.189,96,1.189,97,1.189,98,1.189,99,1.674,100,3.047,101,1.488,102,2.434,103,2.434,104,1.189,105,2.48,106,1.847,107,1.729,108,2.869,109,1.729,110,2.434,111,2.393,112,3.15,113,1.488,114,2.237,115,3.047,116,2.095,117,0.965,118,1.023,119,2.627,120,1.488,121,1.753,122,2.095,123,3.047,124,1.925,125,3.047,126,1.488,127,3.047,128,1.488,129,3.047,130,1.729,131,2.03,132,2.095,133,1.287,134,2.434,135,1.396,136,1.189,137,1.517,138,2.095,139,1.189,140,1.396,141,3.047,142,2.095,143,2.095,144,2.095,145,2.095,146,2.095,147,2.095,148,2.095,149,1.674,150,1.674,151,2.434,152,3.047,153,3.047,154,2.03,155,3.047,156,3.047,157,2.434,158,3.047,159,3.047,160,3.047,161,3.047,162,3.047,163,3.047,164,3.047,165,3.047,166,3.047,167,3.047,168,3.047,169,3.047,170,0.885,171,1.729,172,1.729,173,1.189,174,2.237,175,1.189,176,1.189,177,0.664,178,1.023,179,1.189,180,0.664,181,1.189,182,0.572,183,1.189,184,1.189,185,1.189]],["title/modules/AppModule.html",[186,1.502,187,1.502]],["body/modules/AppModule.html",[3,0.581,4,0.492,5,0.492,25,0.057,67,1.22,68,0.679,85,0.581,86,0.788,90,0.036,91,0.036,93,1.382,106,1.051,170,1.051,177,1.466,180,1.466,182,1.263,186,1.412,187,2.926,188,1.215,189,1.412,190,3.154,191,2.631,192,2.751,193,1.658,194,1.988,195,1.988,196,1.988,197,1.988,198,2.259,199,2.751,200,1.988,201,1.658,202,2.489,203,2.751,204,2.751,205,3.443,206,2.751,207,1.658,208,3.443,209,2.489,210,2.489,211,3.443,212,1.988,213,3.443,214,1.658,215,2.489,216,1.988,217,1.658,218,1.412,219,1.988,220,3.443,221,2.489,222,3.443,223,2.489,224,3.443,225,2.489,226,3.443,227,2.489,228,3.443,229,2.489,230,3.443,231,2.489,232,2.489,233,3.443,234,2.489,235,1.658,236,2.489,237,1.658,238,2.489,239,2.489,240,2.489,241,2.489,242,2.489,243,2.489,244,2.489,245,2.489,246,2.489,247,1.988,248,2.489,249,2.489,250,2.489,251,2.489,252,2.489,253,1.988,254,2.489,255,2.489]],["title/modules/AppRoutingModule.html",[186,1.502,198,1.293]],["body/modules/AppRoutingModule.html",[3,0.884,4,0.749,5,0.749,25,0.056,32,2.147,67,1.054,68,1.033,85,0.884,86,1.199,90,0.047,91,0.047,188,1.848,193,2.522,198,2.203,203,3.024,204,3.605,256,3.785,257,3.785,258,3.212,259,4.512,260,3.024,261,3.785]],["title/components/InstallAppComponent.html",[92,0.618,177,0.839]],["body/components/InstallAppComponent.html",[3,0.486,4,0.412,5,0.412,10,1.843,15,0.486,16,0.708,25,0.057,28,0.486,37,1.661,41,1.016,42,1.512,44,0.976,67,0.486,68,0.568,85,0.486,86,0.659,87,1.281,88,1.663,90,0.032,91,0.032,92,0.836,93,0.568,94,1.481,95,1.181,96,1.181,97,1.181,98,1.181,101,1.919,104,1.181,105,2.474,106,2.147,107,1.72,108,2.858,109,1.72,110,2.423,113,1.481,114,1.181,117,0.961,118,1.016,120,1.481,121,1.747,124,1.481,126,2.13,128,1.016,130,2.03,131,1.387,133,1.281,170,0.879,171,1.72,172,1.72,173,1.181,174,2.23,175,1.181,176,1.181,177,1.245,178,2.253,179,1.181,180,0.659,181,1.181,182,0.568,183,1.181,184,1.181,185,1.181,235,2.784,262,3.338,263,1.663,264,1.72,265,2.384,266,3.578,267,3.931,268,3.033,269,3.033,270,3.033,271,2.081,272,4.705,273,2.081,274,3.033,275,3.578,276,2.858,277,3.578,278,3.338,279,2.081,280,3.033,281,2.021,282,3.033,283,4.503,284,3.033,285,2.081,286,3.033,287,2.081,288,3.14,289,2.081,290,2.081,291,2.081,292,2.081,293,2.081,294,2.081,295,2.081,296,2.081,297,3.578,298,2.081,299,1.663,300,2.081,301,2.081,302,1.181,303,3.14,304,2.081,305,2.081,306,2.081,307,2.081,308,2.081,309,2.081,310,3.033,311,2.081,312,2.423,313,2.081,314,2.081,315,2.081,316,2.081]],["title/interfaces/MyDB.html",[69,1.293,317,1.293]],["body/interfaces/MyDB.html",[3,0.662,4,0.56,5,0.56,8,1.037,14,2.549,15,0.662,16,0.878,24,0.897,25,0.057,28,0.878,33,1.588,40,1.823,44,1.207,54,1.545,67,0.662,69,1.835,72,1.383,80,1.607,85,0.878,90,0.039,91,0.039,117,1.337,317,2.283,318,1.887,319,1.887,320,3.003,321,3.37,322,3.59,323,3.759,324,3.37,325,1.835,326,2.727,327,1.835,328,2.132,329,2.263,330,1.887,331,1.887,332,2.263,333,1.887,334,2.504,335,1.887,336,1.887,337,2.263,338,1.887,339,3.003,340,2.263,341,1.607,342,2.263,343,1.887,344,2.504,345,2.263,346,1.607,347,1.887,348,2.263]],["title/injectables/SyncService.html",[0,1.293,137,1.118]],["body/injectables/SyncService.html",[0,1.607,1,1.043,2,1.555,3,0.545,4,0.461,5,0.461,8,0.854,9,2.76,10,1.75,11,2.193,12,2.193,15,0.545,16,0.769,23,0.986,24,0.739,25,0.057,28,0.769,31,2.629,33,1.75,37,1.391,40,1.517,44,1.02,51,1.864,54,1.396,65,1.864,66,1.867,67,1.02,68,0.637,70,1.139,82,2.193,83,1.864,84,1.555,85,0.545,86,0.739,87,0.986,90,0.035,91,0.035,101,1.139,113,1.607,120,1.139,121,1.607,124,1.607,126,1.607,128,1.862,130,2.35,133,1.391,136,1.324,137,1.391,139,1.324,140,2.76,154,1.555,212,1.864,218,1.324,219,1.864,302,2.164,325,1.862,327,2.133,328,1.867,346,1.324,349,1.864,350,3.814,351,4.142,352,2.333,353,3.292,354,3.292,355,2.541,356,3.292,357,2.333,358,4.533,359,3.292,360,2.333,361,2.333,362,2.333,363,2.333,364,3.814,365,2.629,366,2.333,367,3.292,368,2.333,369,2.333,370,2.333,371,3.292,372,3.292,373,3.292,374,3.292,375,3.292,376,2.333,377,2.629,378,3.489,379,3.047,380,1.864,381,2.333,382,2.333,383,2.333,384,1.864,385,1.864,386,3.292,387,2.333,388,1.864,389,1.864,390,1.864]],["title/interfaces/Task.html",[28,0.618,317,1.293]],["body/interfaces/Task.html",[3,0.562,4,0.475,5,0.475,8,0.88,14,1.907,15,0.562,16,0.785,24,0.762,25,0.057,28,0.905,33,1.933,40,1.889,44,1.215,54,1.419,67,0.562,69,1.174,72,1.174,80,2.381,85,0.785,90,0.035,91,0.035,117,1.518,118,2.234,317,2.157,318,1.602,319,1.602,320,1.92,321,2.685,322,1.92,324,3.096,325,1.174,326,2.927,327,2.049,328,2.381,329,3.096,330,2.24,331,2.796,332,2.685,333,2.796,334,2.796,335,2.24,336,2.796,337,2.685,338,2.796,339,3.353,340,2.685,341,1.907,342,2.685,343,2.796,344,3.049,345,2.685,346,1.907,347,2.796,348,1.92]],["title/components/TaskComponent.html",[92,0.618,180,0.839]],["body/components/TaskComponent.html",[1,0.905,3,0.448,4,0.379,5,0.379,8,0.702,10,1.597,15,0.448,16,0.667,23,0.81,24,0.608,25,0.057,28,1.025,32,1.088,37,1.854,40,1.827,41,0.937,42,1.441,43,2.144,44,0.989,48,1.62,63,3.019,67,0.797,68,0.524,70,0.937,73,0.81,75,1.62,85,0.448,86,0.608,87,0.81,89,1.088,90,0.03,91,0.03,92,0.797,93,0.524,94,1.394,95,1.088,96,1.088,97,1.088,98,1.088,104,1.088,105,2.403,106,1.79,107,1.62,109,1.62,111,2.273,113,1.394,114,2.144,117,1.197,118,0.937,120,1.845,121,1.973,135,1.278,136,1.088,139,1.088,170,0.81,171,1.62,172,1.62,173,1.088,174,2.144,175,1.088,176,1.088,177,0.608,178,0.937,179,1.088,180,1.197,181,1.088,182,0.524,183,1.088,184,1.088,185,1.088,264,1.62,265,2.273,276,3.019,326,1.62,341,1.62,343,2.273,344,2.518,391,1.532,392,3.411,393,2.856,394,3.411,395,3.779,396,3.779,397,2.856,398,2.281,399,3.411,400,2.856,401,3.411,402,1.918,403,3.779,404,1.918,405,2.856,406,1.918,407,1.918,408,2.856,409,1.918,410,2.856,411,2.856,412,1.918,413,2.856,414,2.856,415,2.856,416,2.281,417,3.411,418,1.918,419,2.856,420,2.856,421,2.281,422,2.856,423,1.088,424,4.041,425,1.918,426,1.918,427,2.856,428,1.918,429,1.918,430,1.918,431,1.918,432,1.918,433,1.918,434,1.918,435,1.918,436,1.918,437,2.856,438,2.856,439,2.856,440,2.856,441,2.856,442,1.918,443,1.918,444,1.532,445,1.918]],["title/components/TaskFormComponent.html",[92,0.618,182,0.723]],["body/components/TaskFormComponent.html",[1,0.825,3,0.397,4,0.336,5,0.336,8,0.622,10,1.1,15,0.397,16,0.608,23,1.1,24,0.825,25,0.057,28,1.132,30,1.131,33,0.717,36,1.356,37,1.501,40,1.63,41,0.829,42,1.338,43,2.015,44,1.04,54,1.3,67,0.895,68,0.464,70,0.829,73,0.717,85,0.397,86,0.538,87,1.1,89,0.963,90,0.027,91,0.027,92,0.74,93,0.464,94,1.272,95,0.963,96,0.963,97,0.963,98,0.963,101,1.734,104,0.963,105,2.293,106,1.708,107,1.477,109,1.477,111,2.694,112,2.53,113,1.272,114,0.963,117,1.125,118,0.829,119,1.735,120,0.829,121,1.547,124,1.272,126,1.871,128,1.272,133,1.501,134,2.08,135,1.131,136,0.963,137,1.338,139,0.963,140,1.131,150,1.356,170,0.717,171,1.477,172,1.477,173,0.963,174,2.015,175,0.963,176,0.963,177,0.538,178,0.829,179,0.963,180,0.538,181,0.963,182,0.97,183,2.293,184,0.963,185,0.963,214,1.131,237,2.553,264,1.477,265,2.111,281,1.735,302,0.963,325,1.547,326,1.797,330,1.735,331,2.111,333,1.735,334,2.367,335,1.735,336,1.735,338,1.735,347,1.131,355,1.735,365,1.356,377,1.356,378,1.356,379,1.356,384,1.356,389,1.356,398,2.08,416,2.08,421,3.06,423,2.578,444,1.356,446,3.06,447,1.356,448,3.168,449,2.604,450,3.168,451,3.168,452,2.604,453,1.698,454,2.604,455,2.08,456,2.604,457,1.698,458,2.604,459,2.838,460,2.604,461,2.604,462,3.831,463,4.453,464,4.343,465,1.698,466,2.604,467,2.604,468,3.168,469,1.698,470,2.604,471,1.698,472,1.698,473,1.698,474,3.168,475,1.698,476,3.229,477,2.08,478,1.356,479,1.698,480,1.698,481,1.698,482,1.698,483,1.698,484,1.698,485,2.604,486,1.698,487,1.698,488,1.698,489,1.698,490,1.698,491,1.698,492,1.698,493,2.08,494,1.356,495,1.356,496,2.604,497,1.698,498,1.698,499,2.604,500,1.698,501,1.698,502,2.604,503,2.08]],["title/coverage.html",[504,2.869]],["body/coverage.html",[0,2.034,1,1.052,5,0.657,6,2.775,7,2.775,25,0.056,28,0.776,69,1.621,73,1.403,90,0.044,91,0.044,92,1.115,93,0.907,99,2.653,117,1.052,133,1.923,137,1.403,177,1.052,180,1.052,182,0.907,218,2.363,235,2.212,237,2.212,262,2.653,263,2.653,317,2.034,319,2.775,349,2.653,391,2.653,423,1.884,446,2.653,447,2.653,503,4.111,504,2.653,505,3.321,506,3.321,507,3.321,508,3.321,509,4.165,510,4.165,511,3.321,512,3.321,513,3.321,514,3.321,515,3.321,516,4.551,517,3.321,518,2.653,519,2.653,520,3.321,521,3.321]],["title/dependencies.html",[189,1.803,522,1.48]],["body/dependencies.html",[25,0.057,68,0.97,72,1.735,90,0.046,91,0.046,189,2.015,191,2.367,206,3.469,207,2.894,214,2.367,216,2.838,217,2.367,260,2.838,523,3.552,524,5.252,525,3.552,526,3.552,527,3.552,528,3.552,529,3.552,530,3.552,531,3.552,532,3.552,533,3.552,534,3.552,535,3.552,536,3.552,537,3.552,538,3.552,539,3.552,540,3.552,541,3.552]],["title/index.html",[15,0.519,542,2.221,543,2.221]],["body/index.html",[1,0.737,4,0.291,9,1.925,10,1.748,11,1.551,25,0.024,33,0.983,42,0.621,43,1.639,44,1.178,48,0.834,53,2.86,54,1.515,59,1.859,66,1.32,72,1.411,75,0.834,90,0.024,91,0.024,92,0.675,93,0.401,101,1.604,102,1.859,103,1.859,106,1.686,119,1.551,124,2.298,126,2.407,128,2.342,130,2.742,131,2.386,137,0.983,149,2.625,151,1.859,154,2.659,157,2.625,178,1.137,182,0.401,201,0.98,217,2.386,247,1.174,253,1.859,264,0.834,278,3.042,281,0.98,288,1.174,299,2.308,302,1.639,303,2.308,312,3.403,325,1.948,327,1.86,328,2.031,341,0.834,346,2.417,355,1.551,380,1.859,385,2.625,388,1.174,390,2.625,423,0.834,455,1.859,459,1.174,476,1.174,477,2.308,478,1.174,493,2.308,494,1.174,495,1.174,522,0.98,544,1.47,545,2.328,546,1.47,547,1.47,548,1.47,549,2.328,550,2.889,551,4.364,552,1.47,553,1.47,554,1.47,555,1.47,556,2.328,557,1.47,558,2.328,559,1.47,560,1.47,561,1.47,562,1.47,563,1.47,564,1.47,565,1.47,566,2.328,567,2.328,568,3.581,569,2.889,570,2.889,571,2.328,572,1.47,573,2.889,574,1.47,575,1.47,576,1.47,577,2.889,578,1.47,579,2.328,580,1.47,581,1.47,582,1.47,583,2.328,584,1.47,585,3.286,586,1.47,587,1.47,588,1.47,589,1.47,590,1.47,591,1.47,592,1.47,593,2.328,594,2.328,595,1.47,596,1.47,597,1.47,598,1.47,599,2.328,600,1.47,601,1.47,602,1.47,603,1.47,604,2.889,605,1.47,606,1.47,607,2.328,608,1.47,609,2.328,610,1.47,611,2.328,612,1.47,613,1.47,614,1.47,615,1.47,616,1.47,617,1.47,618,1.47,619,1.47,620,1.47,621,1.47,622,1.47,623,1.47,624,1.47,625,1.47,626,1.47,627,1.47,628,1.47,629,1.47,630,1.47,631,2.889,632,1.47,633,1.47,634,1.47,635,1.47,636,1.47,637,1.47,638,1.47,639,1.47,640,1.174,641,1.47,642,1.47,643,1.47,644,1.47,645,1.47,646,1.47,647,1.47,648,1.47,649,1.47,650,1.47,651,1.47,652,1.47,653,2.328,654,1.47,655,1.47,656,1.47,657,1.47,658,1.47,659,1.47,660,1.47,661,1.47,662,1.174,663,1.47,664,1.47,665,1.47,666,2.328,667,2.328,668,1.47,669,1.47,670,1.47,671,1.47,672,1.47,673,1.47,674,1.47,675,1.47,676,1.47,677,1.47,678,1.47,679,1.47,680,1.47,681,3.286,682,1.47,683,1.47,684,1.47,685,1.47,686,1.47,687,1.47,688,1.47,689,1.47,690,1.47,691,2.328,692,1.47,693,1.174,694,1.47,695,1.47,696,2.328,697,3.581,698,3.99,699,1.47,700,1.47,701,1.47,702,1.47,703,1.47,704,1.47,705,1.47,706,1.47,707,1.47,708,1.47,709,2.889,710,2.889,711,1.47,712,3.286,713,1.47,714,1.47,715,1.47,716,1.47,717,2.328,718,2.328,719,3.286,720,1.174,721,2.328,722,2.328,723,1.47,724,3.809,725,1.47,726,1.47,727,1.47,728,2.328,729,1.47,730,1.47,731,1.47,732,1.47,733,1.47,734,2.889,735,1.47,736,1.47,737,1.47,738,0.98,739,1.47,740,1.47]],["title/modules.html",[188,1.754]],["body/modules.html",[25,0.05,90,0.05,91,0.05,187,2.313,188,1.99,198,1.99,207,2.716,741,4.076,742,4.076,743,4.713,744,4.076,745,4.076]],["title/overview.html",[738,2.393]],["body/overview.html",[2,2.322,25,0.055,90,0.045,91,0.045,93,1.404,94,1.701,170,1.472,177,1.473,180,1.473,182,1.27,186,1.977,187,3.028,188,1.701,189,1.977,190,2.783,191,2.322,192,2.783,193,2.322,194,2.783,195,2.783,196,2.783,197,2.783,198,2.271,199,3.428,200,2.783,201,2.322,318,2.322,640,3.715,662,2.783,738,2.322,746,3.484]],["title/properties.html",[16,0.742,522,1.48]],["body/properties.html",[16,0.971,25,0.053,90,0.05,91,0.05,693,3.32,747,4.156]],["title/routes.html",[258,2.393]],["body/routes.html",[25,0.05,90,0.05,91,0.05,258,2.797]],["title/miscellaneous/variables.html",[748,1.774,749,2.539]],["body/miscellaneous/variables.html",[6,2.266,7,2.817,12,2.266,14,1.929,15,0.794,23,1.943,24,1.457,25,0.057,30,2.266,32,1.929,44,0.987,73,1.943,74,2.716,75,1.929,76,2.716,77,2.716,78,2.716,79,2.716,80,1.929,81,2.716,82,2.817,90,0.044,91,0.044,117,1.339,133,1.786,218,2.73,327,2.064,518,2.716,519,2.716,720,2.716,748,2.716,749,2.716,750,3.4,751,3.4,752,3.4,753,4.227,754,4.227,755,4.227,756,4.227,757,3.4]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":746,"title":{},"body":{"overview.html":{}}}],["0.0.1",{"_index":747,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":75,"title":{},"body":{"injectables/ApiClientService.html":{},"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":503,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["13",{"_index":552,"title":{},"body":{"index.html":{}}}],["13.0.0",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["13.3.6",{"_index":694,"title":{},"body":{"index.html":{}}}],["13.3.8",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":640,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.3.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["2025",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":651,"title":{},"body":{"index.html":{}}}],["3.7.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":662,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["5.3.3",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":80,"title":{},"body":{"injectables/ApiClientService.html":{},"interfaces/MyDB.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["abordaje",{"_index":615,"title":{},"body":{"index.html":{}}}],["accepted",{"_index":309,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["acept",{"_index":311,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["activa",{"_index":601,"title":{},"body":{"index.html":{}}}],["activos",{"_index":598,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["actualización",{"_index":369,"title":{},"body":{"injectables/SyncService.html":{}}}],["actualizada",{"_index":376,"title":{},"body":{"injectables/SyncService.html":{}}}],["actualizar",{"_index":380,"title":{},"body":{"injectables/SyncService.html":{},"index.html":{}}}],["actualziar",{"_index":62,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["add",{"_index":730,"title":{},"body":{"index.html":{}}}],["addtask",{"_index":17,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["agreagr",{"_index":39,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["agregar",{"_index":476,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["al",{"_index":302,"title":{},"body":{"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["align",{"_index":500,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["alltasks",{"_index":56,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["alltasks.filter(task",{"_index":57,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["almacenamiento",{"_index":641,"title":{},"body":{"index.html":{}}}],["almacenar",{"_index":605,"title":{},"body":{"index.html":{}}}],["ambiente",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":551,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/SyncService.html":{}}}],["angular/compiler",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":68,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"components/TaskFormComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["angular/material/card",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":327,"title":{},"body":{"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apiclient",{"_index":361,"title":{},"body":{"injectables/SyncService.html":{}}}],["apiclientservice",{"_index":1,"title":{"injectables/ApiClientService.html":{}},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["apiurl",{"_index":350,"title":{},"body":{"injectables/SyncService.html":{}}}],["aplicación",{"_index":546,"title":{},"body":{"index.html":{}}}],["aplicar",{"_index":580,"title":{},"body":{"index.html":{}}}],["app",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["app.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{}}}],["app.component.html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{}}}],["app.component.ts",{"_index":263,"title":{},"body":{"components/InstallAppComponent.html":{},"coverage.html":{}}}],["app.component.ts:13",{"_index":287,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["app.component.ts:30",{"_index":274,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["app.component.ts:40",{"_index":279,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["app/install",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"coverage.html":{}}}],["appcomponent",{"_index":93,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["application",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":198,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":620,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":271,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["arquitectura",{"_index":583,"title":{},"body":{"index.html":{}}}],["array",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{}}}],["artifacts",{"_index":713,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":383,"title":{},"body":{"injectables/SyncService.html":{}}}],["async",{"_index":26,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["auto",{"_index":445,"title":{},"body":{"components/TaskComponent.html":{}}}],["autoincrement",{"_index":81,"title":{},"body":{"injectables/ApiClientService.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":703,"title":{},"body":{"index.html":{}}}],["automáticamente",{"_index":478,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["automático",{"_index":291,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["available",{"_index":745,"title":{},"body":{"modules.html":{}}}],["await",{"_index":34,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["beforeinstallprompt",{"_index":299,"title":{},"body":{"components/InstallAppComponent.html":{},"index.html":{}}}],["biblioteca",{"_index":571,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":344,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{}}}],["bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["botón",{"_index":653,"title":{},"body":{"index.html":{}}}],["browse",{"_index":743,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["buenas",{"_index":581,"title":{},"body":{"index.html":{}}}],["build",{"_index":712,"title":{},"body":{"index.html":{}}}],["cachear",{"_index":596,"title":{},"body":{"index.html":{}}}],["cacheo",{"_index":629,"title":{},"body":{"index.html":{}}}],["cambios",{"_index":557,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":732,"title":{},"body":{"index.html":{}}}],["capacidad",{"_index":564,"title":{},"body":{"index.html":{}}}],["capturado",{"_index":300,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["catch(err",{"_index":389,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["cd",{"_index":690,"title":{},"body":{"index.html":{}}}],["center",{"_index":499,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["change",{"_index":705,"title":{},"body":{"index.html":{}}}],["check",{"_index":737,"title":{},"body":{"index.html":{}}}],["choice",{"_index":727,"title":{},"body":{"index.html":{}}}],["choiceresult.outcome",{"_index":308,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["class",{"_index":86,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["cli",{"_index":681,"title":{},"body":{"index.html":{}}}],["client.service",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["client.service.ts",{"_index":7,"title":{},"body":{"injectables/ApiClientService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.service.ts:35",{"_index":50,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["client.service.ts:44",{"_index":38,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["client.service.ts:55",{"_index":47,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["client.service.ts:66",{"_index":61,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["client.service.ts:74",{"_index":58,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["client.service.ts:83",{"_index":64,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["clona",{"_index":684,"title":{},"body":{"index.html":{}}}],["clone",{"_index":687,"title":{},"body":{"index.html":{}}}],["close",{"_index":441,"title":{},"body":{"components/TaskComponent.html":{}}}],["cloud",{"_index":672,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":707,"title":{},"body":{"index.html":{}}}],["comes",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":728,"title":{},"body":{"index.html":{}}}],["como",{"_index":385,"title":{},"body":{"injectables/SyncService.html":{},"index.html":{}}}],["compartido",{"_index":454,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["compelta",{"_index":340,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["completa",{"_index":413,"title":{},"body":{"components/TaskComponent.html":{}}}],["completada",{"_index":63,"title":{},"body":{"injectables/ApiClientService.html":{},"components/TaskComponent.html":{}}}],["completar",{"_index":408,"title":{},"body":{"components/TaskComponent.html":{}}}],["compone",{"_index":587,"title":{},"body":{"index.html":{}}}],["component",{"_index":92,"title":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["componente",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["componentes",{"_index":455,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["components",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"overview.html":{}}}],["components/install",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["components/task",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["components/task/task.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":346,"title":{},"body":{"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"index.html":{}}}],["conectividad",{"_index":558,"title":{},"body":{"index.html":{}}}],["conexion",{"_index":12,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{},"miscellaneous/variables.html":{}}}],["conexión",{"_index":493,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["config.json",{"_index":594,"title":{},"body":{"index.html":{}}}],["configur",{"_index":619,"title":{},"body":{"index.html":{}}}],["configura",{"_index":592,"title":{},"body":{"index.html":{}}}],["configuración",{"_index":617,"title":{},"body":{"index.html":{}}}],["configurado",{"_index":625,"title":{},"body":{"index.html":{}}}],["console.error('error",{"_index":379,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["console.log('conexión",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('el",{"_index":310,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["console.log('en",{"_index":489,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["console.log('evento",{"_index":298,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["console.log('sin",{"_index":492,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["console.log(`tarea",{"_index":375,"title":{},"body":{"injectables/SyncService.html":{}}}],["const",{"_index":32,"title":{},"body":{"injectables/ApiClientService.html":{},"modules/AppRoutingModule.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":88,"title":{},"body":{"injectables/ApiClientService.html":{},"components/InstallAppComponent.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["contempla",{"_index":670,"title":{},"body":{"index.html":{}}}],["content",{"_index":331,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["contiene",{"_index":590,"title":{},"body":{"index.html":{}}}],["conveniencia",{"_index":661,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":504,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":654,"title":{},"body":{"index.html":{}}}],["crea",{"_index":381,"title":{},"body":{"injectables/SyncService.html":{}}}],["creada",{"_index":387,"title":{},"body":{"injectables/SyncService.html":{}}}],["crear",{"_index":388,"title":{},"body":{"injectables/SyncService.html":{},"index.html":{}}}],["crud",{"_index":612,"title":{},"body":{"index.html":{}}}],["críticos",{"_index":599,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":494,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["datefin",{"_index":338,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["dateini",{"_index":336,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["datos",{"_index":43,"title":{},"body":{"injectables/ApiClientService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["db",{"_index":73,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["db).add('taskstore",{"_index":35,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["db).delete('taskstore",{"_index":46,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["db).getall('taskstore",{"_index":49,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["db).put('taskstore",{"_index":60,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["db.createobjectstore('taskstore",{"_index":78,"title":{},"body":{"injectables/ApiClientService.html":{},"miscellaneous/variables.html":{}}}],["dbschema",{"_index":321,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["de",{"_index":44,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["decisión",{"_index":631,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorador",{"_index":419,"title":{},"body":{"components/TaskComponent.html":{}}}],["decoration",{"_index":394,"title":{},"body":{"components/TaskComponent.html":{}}}],["decorators",{"_index":285,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["default",{"_index":23,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["deferredprompt",{"_index":266,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["define",{"_index":626,"title":{},"body":{"index.html":{}}}],["defined",{"_index":37,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["del",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["delete",{"_index":401,"title":{},"body":{"components/TaskComponent.html":{}}}],["deleteme",{"_index":395,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletetask",{"_index":18,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{}}}],["deletetask(task",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["demostrando",{"_index":613,"title":{},"body":{"index.html":{}}}],["demostrar",{"_index":563,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":189,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derechos",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["desarrollada",{"_index":547,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":560,"title":{},"body":{"index.html":{}}}],["descripcion",{"_index":330,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["detección",{"_index":643,"title":{},"body":{"index.html":{}}}],["detecta",{"_index":608,"title":{},"body":{"index.html":{}}}],["detectar",{"_index":574,"title":{},"body":{"index.html":{}}}],["dev",{"_index":700,"title":{},"body":{"index.html":{}}}],["developer",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["development",{"_index":695,"title":{},"body":{"index.html":{}}}],["diferenciaron",{"_index":647,"title":{},"body":{"index.html":{}}}],["directive",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["directives",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":711,"title":{},"body":{"index.html":{}}}],["directory",{"_index":716,"title":{},"body":{"index.html":{}}}],["diseño",{"_index":585,"title":{},"body":{"index.html":{}}}],["disparar",{"_index":645,"title":{},"body":{"index.html":{}}}],["display",{"_index":497,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["disponibles",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["disponibles¡agrega",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["dist",{"_index":715,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["don",{"_index":13,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["dynamic",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":725,"title":{},"body":{"index.html":{}}}],["el",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"index.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["eliminada",{"_index":405,"title":{},"body":{"components/TaskComponent.html":{}}}],["eliminando",{"_index":634,"title":{},"body":{"index.html":{}}}],["eliminar",{"_index":48,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["en",{"_index":325,"title":{},"body":{"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["enabled",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":724,"title":{},"body":{"index.html":{}}}],["envio",{"_index":460,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["environment",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/SyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.api+\"/todos",{"_index":356,"title":{},"body":{"injectables/SyncService.html":{}}}],["environment.production",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/SyncService.html":{}}}],["err",{"_index":378,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["error",{"_index":377,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["es",{"_index":545,"title":{},"body":{"index.html":{}}}],["esperar",{"_index":305,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["est",{"_index":484,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["esta",{"_index":544,"title":{},"body":{"index.html":{}}}],["este",{"_index":562,"title":{},"body":{"index.html":{}}}],["estrategia",{"_index":627,"title":{},"body":{"index.html":{}}}],["event",{"_index":272,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["event.preventdefault",{"_index":296,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["eventemitter",{"_index":403,"title":{},"body":{"components/TaskComponent.html":{}}}],["evento",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"index.html":{}}}],["example",{"_index":442,"title":{},"body":{"components/TaskComponent.html":{}}}],["execute",{"_index":721,"title":{},"body":{"index.html":{}}}],["existentes",{"_index":649,"title":{},"body":{"index.html":{}}}],["experiencia",{"_index":577,"title":{},"body":{"index.html":{}}}],["export",{"_index":85,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["exports",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":320,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["externa",{"_index":328,"title":{},"body":{"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"index.html":{}}}],["externas",{"_index":638,"title":{},"body":{"index.html":{}}}],["extra",{"_index":664,"title":{},"body":{"index.html":{}}}],["false",{"_index":30,"title":{},"body":{"injectables/ApiClientService.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["falso",{"_index":415,"title":{},"body":{"components/TaskComponent.html":{}}}],["fecha",{"_index":334,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["field",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{}}}],["files",{"_index":706,"title":{},"body":{"index.html":{}}}],["fin",{"_index":496,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["final",{"_index":337,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["firebase",{"_index":671,"title":{},"body":{"index.html":{}}}],["first",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["flex",{"_index":444,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["form",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["form.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.css",{"_index":448,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.html",{"_index":449,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts",{"_index":447,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":469,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:22",{"_index":465,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:33",{"_index":453,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form.component.ts:49",{"_index":457,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["form/task",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/TaskFormComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":463,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formgroup",{"_index":462,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formgrup",{"_index":466,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formualrio",{"_index":467,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["formulario",{"_index":459,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["front",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["funcionalidades",{"_index":663,"title":{},"body":{"index.html":{}}}],["function",{"_index":27,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["further",{"_index":733,"title":{},"body":{"index.html":{}}}],["generate",{"_index":709,"title":{},"body":{"index.html":{}}}],["generated",{"_index":692,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":11,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{},"index.html":{}}}],["getall",{"_index":19,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["getting",{"_index":542,"title":{"index.html":{}},"body":{}}],["getunsyncedtasks",{"_index":20,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["git",{"_index":686,"title":{},"body":{"index.html":{}}}],["globalmente",{"_index":683,"title":{},"body":{"index.html":{}}}],["go",{"_index":736,"title":{},"body":{"index.html":{}}}],["graph",{"_index":744,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":292,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["habilita",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["habilitar",{"_index":652,"title":{},"body":{"index.html":{}}}],["handlesubmit",{"_index":452,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["handlesubmit(input",{"_index":456,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["hay",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":734,"title":{},"body":{"index.html":{}}}],["herramientas",{"_index":637,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":289,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["hostlistener('window:beforeinstallprompt",{"_index":286,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["hostlisteners",{"_index":269,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["hotlistener",{"_index":275,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["http",{"_index":360,"title":{},"body":{"injectables/SyncService.html":{}}}],["http://localhost:4200",{"_index":702,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":359,"title":{},"body":{"injectables/SyncService.html":{}}}],["httpclientmodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/70r63x/to",{"_index":688,"title":{},"body":{"index.html":{}}}],["https://jsonplaceholder.typicode.com",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconos",{"_index":623,"title":{},"body":{"index.html":{}}}],["id",{"_index":33,"title":{},"body":{"injectables/ApiClientService.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["idb",{"_index":72,"title":{},"body":{"injectables/ApiClientService.html":{},"interfaces/MyDB.html":{},"interfaces/Task.html":{},"dependencies.html":{},"index.html":{}}}],["identifier",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":87,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["ii",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":644,"title":{},"body":{"index.html":{}}}],["implementación",{"_index":669,"title":{},"body":{"index.html":{}}}],["implementado",{"_index":642,"title":{},"body":{"index.html":{}}}],["implementar",{"_index":565,"title":{},"body":{"index.html":{}}}],["implements",{"_index":264,"title":{},"body":{"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["import",{"_index":67,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["imports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incompleta",{"_index":342,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["indexdb",{"_index":14,"title":{},"body":{"injectables/ApiClientService.html":{},"interfaces/MyDB.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["indexeddb",{"_index":477,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["ingresados",{"_index":461,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inicializador",{"_index":410,"title":{},"body":{"components/TaskComponent.html":{}}}],["iniciando",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["inicilizador",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["inicio",{"_index":335,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{}},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{},"overview.html":{}}}],["inmediatamente",{"_index":487,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inmediato",{"_index":491,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["input",{"_index":421,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["input._id",{"_index":481,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inputform",{"_index":450,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["inputs",{"_index":398,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["instala",{"_index":280,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["instalación",{"_index":312,"title":{},"body":{"components/InstallAppComponent.html":{},"index.html":{}}}],["instalado",{"_index":682,"title":{},"body":{"index.html":{}}}],["instalados",{"_index":680,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":288,"title":{},"body":{"components/InstallAppComponent.html":{},"index.html":{}}}],["install",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["installappcomponent",{"_index":177,"title":{"components/InstallAppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["installpwa",{"_index":267,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["instlacion",{"_index":277,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["integrar",{"_index":636,"title":{},"body":{"index.html":{}}}],["intenta",{"_index":486,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["interface",{"_index":317,"title":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["interfaces",{"_index":318,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"overview.html":{}}}],["ischecked",{"_index":396,"title":{},"body":{"components/TaskComponent.html":{}}}],["isdone",{"_index":343,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{}}}],["items",{"_index":501,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["iteración",{"_index":675,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["jsonplaceholder",{"_index":573,"title":{},"body":{"index.html":{}}}],["justify",{"_index":498,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["karma",{"_index":723,"title":{},"body":{"index.html":{}}}],["key",{"_index":348,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["keypath",{"_index":79,"title":{},"body":{"injectables/ApiClientService.html":{},"miscellaneous/variables.html":{}}}],["la",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["labs",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["las",{"_index":53,"title":{},"body":{"injectables/ApiClientService.html":{},"index.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"overview.html":{}}}],["limpiar",{"_index":314,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["line",{"_index":428,"title":{},"body":{"components/TaskComponent.html":{}}}],["list",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["list.git",{"_index":689,"title":{},"body":{"index.html":{}}}],["lista",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["literal",{"_index":323,"title":{},"body":{"interfaces/MyDB.html":{}}}],["localmente",{"_index":606,"title":{},"body":{"index.html":{}}}],["los",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["lucasian",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["línea",{"_index":485,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["lógica",{"_index":614,"title":{},"body":{"index.html":{}}}],["main",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["maneja",{"_index":656,"title":{},"body":{"index.html":{}}}],["manejo",{"_index":579,"title":{},"body":{"index.html":{}}}],["manifest.json",{"_index":618,"title":{},"body":{"index.html":{}}}],["manifest.webmanifest",{"_index":621,"title":{},"body":{"index.html":{}}}],["marca",{"_index":384,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["matcardmodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":91,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["mediante",{"_index":570,"title":{},"body":{"index.html":{}}}],["medio",{"_index":282,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["messaging",{"_index":673,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["methods",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["miscellaneous",{"_index":748,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/tasks",{"_index":70,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["module",{"_index":186,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":188,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":735,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":301,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["muestra",{"_index":657,"title":{},"body":{"index.html":{}}}],["mydb",{"_index":69,"title":{"interfaces/MyDB.html":{}},"body":{"injectables/ApiClientService.html":{},"interfaces/MyDB.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["más",{"_index":294,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["nativo",{"_index":569,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":701,"title":{},"body":{"index.html":{}}}],["navigator.online",{"_index":488,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["necesidad",{"_index":635,"title":{},"body":{"index.html":{}}}],["need",{"_index":729,"title":{},"body":{"index.html":{}}}],["new",{"_index":423,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["newtask",{"_index":430,"title":{},"body":{"components/TaskComponent.html":{}}}],["newtask.isdone",{"_index":432,"title":{},"body":{"components/TaskComponent.html":{}}}],["next",{"_index":372,"title":{},"body":{"injectables/SyncService.html":{}}}],["ng",{"_index":698,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["ngsw",{"_index":593,"title":{},"body":{"index.html":{}}}],["nicamente",{"_index":602,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":678,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":622,"title":{},"body":{"index.html":{}}}],["none",{"_index":417,"title":{},"body":{"components/TaskComponent.html":{}}}],["nota",{"_index":600,"title":{},"body":{"index.html":{}}}],["notificaciones",{"_index":666,"title":{},"body":{"index.html":{}}}],["npm",{"_index":679,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["nuevas",{"_index":648,"title":{},"body":{"index.html":{}}}],["null",{"_index":316,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["number",{"_index":329,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["o",{"_index":341,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["object",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign",{"_index":431,"title":{},"body":{"components/TaskComponent.html":{}}}],["objetivo",{"_index":561,"title":{},"body":{"index.html":{}}}],["obtener",{"_index":51,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{}}}],["obtienen",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["offline",{"_index":555,"title":{},"body":{"index.html":{}}}],["ofrecer",{"_index":576,"title":{},"body":{"index.html":{}}}],["onbeforeinstallprompt",{"_index":268,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["onbeforeinstallprompt(event",{"_index":284,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["oninit",{"_index":265,"title":{},"body":{"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["online",{"_index":66,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"injectables/SyncService.html":{},"index.html":{}}}],["onsubmit",{"_index":458,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["opcional",{"_index":665,"title":{},"body":{"index.html":{}}}],["opendb",{"_index":71,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["opendb('my",{"_index":74,"title":{},"body":{"injectables/ApiClientService.html":{},"miscellaneous/variables.html":{}}}],["operaciones",{"_index":611,"title":{},"body":{"index.html":{}}}],["opt",{"_index":632,"title":{},"body":{"index.html":{}}}],["optional",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["out",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":422,"title":{},"body":{"components/TaskComponent.html":{}}}],["outputs",{"_index":400,"title":{},"body":{"components/TaskComponent.html":{}}}],["overview",{"_index":738,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":522,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":740,"title":{},"body":{"index.html":{}}}],["para",{"_index":10,"title":{},"body":{"injectables/ApiClientService.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["param",{"_index":89,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["pendiente",{"_index":668,"title":{},"body":{"index.html":{}}}],["permitiendo",{"_index":556,"title":{},"body":{"index.html":{}}}],["persistencia",{"_index":650,"title":{},"body":{"index.html":{}}}],["personaliz",{"_index":659,"title":{},"body":{"index.html":{}}}],["personalizada",{"_index":578,"title":{},"body":{"index.html":{}}}],["platform",{"_index":726,"title":{},"body":{"index.html":{}}}],["por",{"_index":281,"title":{},"body":{"components/InstallAppComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["precarga",{"_index":628,"title":{},"body":{"index.html":{}}}],["precargar",{"_index":595,"title":{},"body":{"index.html":{}}}],["prevenir",{"_index":290,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["principales",{"_index":591,"title":{},"body":{"index.html":{}}}],["principio",{"_index":554,"title":{},"body":{"index.html":{}}}],["private",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["prod",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producción",{"_index":603,"title":{},"body":{"index.html":{}}}],["production",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressive",{"_index":548,"title":{},"body":{"index.html":{}}}],["project",{"_index":691,"title":{},"body":{"index.html":{}}}],["promise",{"_index":55,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["prompt",{"_index":283,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{}},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"properties.html":{}}}],["propiedades",{"_index":624,"title":{},"body":{"index.html":{}}}],["propósito",{"_index":559,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":83,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{}}}],["providers",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["proyecto",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["prueba",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["prácticas",{"_index":582,"title":{},"body":{"index.html":{}}}],["public",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["push",{"_index":667,"title":{},"body":{"index.html":{}}}],["pwa",{"_index":278,"title":{},"body":{"components/InstallAppComponent.html":{},"index.html":{}}}],["que",{"_index":655,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["rechaz",{"_index":313,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["reconexión",{"_index":575,"title":{},"body":{"index.html":{}}}],["recorre",{"_index":646,"title":{},"body":{"index.html":{}}}],["recuperada",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["recupere",{"_index":495,"title":{},"body":{"components/TaskFormComponent.html":{},"index.html":{}}}],["recursos",{"_index":630,"title":{},"body":{"index.html":{}}}],["reference",{"_index":739,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":315,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["register",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["registerwhenstable:30000",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["reload",{"_index":704,"title":{},"body":{"index.html":{}}}],["rendimiento",{"_index":584,"title":{},"body":{"index.html":{}}}],["repositorio:example",{"_index":685,"title":{},"body":{"index.html":{}}}],["requerimientos",{"_index":616,"title":{},"body":{"index.html":{}}}],["requisitos",{"_index":677,"title":{},"body":{"index.html":{}}}],["reservados",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":373,"title":{},"body":{"injectables/SyncService.html":{}}}],["response.id",{"_index":386,"title":{},"body":{"injectables/SyncService.html":{}}}],["respuesta",{"_index":306,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["results",{"_index":90,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":36,"title":{},"body":{"injectables/ApiClientService.html":{},"components/TaskFormComponent.html":{}}}],["returns",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["root",{"_index":84,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"injectables/SyncService.html":{}}}],["root'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["routermodule",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":258,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":697,"title":{},"body":{"index.html":{}}}],["running",{"_index":717,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["sas",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffolding",{"_index":708,"title":{},"body":{"index.html":{}}}],["se",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["seconds",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["según",{"_index":660,"title":{},"body":{"index.html":{}}}],["selector",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["senior",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":699,"title":{},"body":{"index.html":{}}}],["server",{"_index":696,"title":{},"body":{"index.html":{}}}],["service",{"_index":568,"title":{},"body":{"index.html":{}}}],["services/api",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["services/sync.service",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["serviceworker",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["servicio",{"_index":9,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{},"index.html":{}}}],["servicios",{"_index":589,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":358,"title":{},"body":{"injectables/SyncService.html":{}}}],["shell",{"_index":597,"title":{},"body":{"index.html":{}}}],["si",{"_index":365,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{}}}],["sigue",{"_index":553,"title":{},"body":{"index.html":{}}}],["siguiente",{"_index":674,"title":{},"body":{"index.html":{}}}],["siguientes",{"_index":588,"title":{},"body":{"index.html":{}}}],["simulada",{"_index":572,"title":{},"body":{"index.html":{}}}],["simular",{"_index":610,"title":{},"body":{"index.html":{}}}],["sin",{"_index":390,"title":{},"body":{"injectables/SyncService.html":{},"index.html":{}}}],["sincroniza",{"_index":609,"title":{},"body":{"index.html":{}}}],["sincronizacion",{"_index":345,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["sincronización",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["sincronizada",{"_index":65,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{}}}],["sincronizadas",{"_index":59,"title":{},"body":{"injectables/ApiClientService.html":{},"index.html":{}}}],["sincronizando",{"_index":490,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["sincronizar",{"_index":355,"title":{},"body":{"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["solución",{"_index":586,"title":{},"body":{"index.html":{}}}],["soon",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["spacer",{"_index":443,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/.../api",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/install",{"_index":262,"title":{},"body":{"components/InstallAppComponent.html":{},"coverage.html":{}}}],["src/app/components/task",{"_index":446,"title":{},"body":{"components/TaskFormComponent.html":{},"coverage.html":{}}}],["src/app/components/task/task.component.ts",{"_index":391,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/app/components/task/task.component.ts:18",{"_index":402,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/components/task/task.component.ts:22",{"_index":404,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/components/task/task.component.ts:27",{"_index":418,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/components/task/task.component.ts:37",{"_index":406,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/components/task/task.component.ts:50",{"_index":412,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/components/task/task.component.ts:62",{"_index":407,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/components/task/task.component.ts:77",{"_index":409,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/models/tasks.ts",{"_index":319,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":6,"title":{},"body":{"injectables/ApiClientService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/sync.service",{"_index":472,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["src/app/services/sync.service.ts",{"_index":349,"title":{},"body":{"injectables/SyncService.html":{},"coverage.html":{}}}],["src/app/services/sync.service.ts:17",{"_index":357,"title":{},"body":{"injectables/SyncService.html":{}}}],["src/app/services/sync.service.ts:27",{"_index":352,"title":{},"body":{"injectables/SyncService.html":{}}}],["src/environments/environment.prod.ts",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["stado",{"_index":470,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["started",{"_index":543,"title":{"index.html":{}},"body":{}}],["statements",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":451,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["store",{"_index":77,"title":{},"body":{"injectables/ApiClientService.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":714,"title":{},"body":{"index.html":{}}}],["strike",{"_index":397,"title":{},"body":{"components/TaskComponent.html":{}}}],["strike(isdone",{"_index":411,"title":{},"body":{"components/TaskComponent.html":{}}}],["string",{"_index":326,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["styles",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["styleurls",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["su",{"_index":567,"title":{},"body":{"index.html":{}}}],["success",{"_index":468,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["support",{"_index":741,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":742,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":633,"title":{},"body":{"index.html":{}}}],["synced",{"_index":347,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["syncservice",{"_index":137,"title":{"injectables/SyncService.html":{}},"body":{"components/AppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["synctasks",{"_index":351,"title":{},"body":{"injectables/SyncService.html":{}}}],["tabla",{"_index":324,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["table",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["tarde",{"_index":295,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["tarea",{"_index":40,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["tareas",{"_index":54,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["task",{"_index":28,"title":{"interfaces/Task.html":{}},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["task).subscribe",{"_index":371,"title":{},"body":{"injectables/SyncService.html":{}}}],["task._id",{"_index":45,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{}}}],["task.component.css",{"_index":392,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.html",{"_index":393,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.id",{"_index":364,"title":{},"body":{"injectables/SyncService.html":{}}}],["task.isdone",{"_index":29,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["task.synced",{"_index":31,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{}}}],["taskcomponent",{"_index":180,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskformcomponent",{"_index":182,"title":{"components/TaskFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["taskitem",{"_index":399,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskitem?.content",{"_index":440,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskitem?.datefin",{"_index":439,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskitem?.dateini",{"_index":438,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskitem?.title",{"_index":437,"title":{},"body":{"components/TaskComponent.html":{}}}],["tasks",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{}}}],["tasks.foreach(task",{"_index":363,"title":{},"body":{"injectables/SyncService.html":{}}}],["taskstore",{"_index":322,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["tecnica",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["templateurl",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["test",{"_index":720,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":731,"title":{},"body":{"index.html":{}}}],["tests",{"_index":719,"title":{},"body":{"index.html":{}}}],["texto",{"_index":420,"title":{},"body":{"components/TaskComponent.html":{}}}],["then((id",{"_index":480,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.apiclient.getunsyncedtasks().then((tasks",{"_index":362,"title":{},"body":{"injectables/SyncService.html":{}}}],["this.apiclient.updatetask(task",{"_index":374,"title":{},"body":{"injectables/SyncService.html":{}}}],["this.db.addtask(input",{"_index":479,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.db.deletetask(this.taskitem).then((oldtask",{"_index":425,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.db.getall().then((tasks",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.db.toggletask(newtask).then((task",{"_index":434,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.decoration",{"_index":427,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.deferredprompt",{"_index":297,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["this.deferredprompt.prompt",{"_index":304,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["this.deferredprompt.userchoice.then((choiceresult",{"_index":307,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["this.delete.emit(oldtask",{"_index":426,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.http.post(this.apiurl",{"_index":382,"title":{},"body":{"injectables/SyncService.html":{}}}],["this.http.put(`${this.apiurl}/${task.id",{"_index":370,"title":{},"body":{"injectables/SyncService.html":{}}}],["this.inputform.invalid",{"_index":473,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.inputform.reset",{"_index":483,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.status",{"_index":474,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["this.strike(task.isdone",{"_index":435,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.strike(this.taskitem.isdone",{"_index":436,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.syncservice.synctasks",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/TaskFormComponent.html":{}}}],["this.taskitem",{"_index":424,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskitem.isdone",{"_index":433,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasks",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasks.filter(x",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasks.push(input",{"_index":482,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["through",{"_index":429,"title":{},"body":{"components/TaskComponent.html":{}}}],["tiene",{"_index":367,"title":{},"body":{"injectables/SyncService.html":{}}}],["title",{"_index":333,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskFormComponent.html":{}}}],["titulo",{"_index":332,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["todas",{"_index":52,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{}}}],["todos",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["toggletask",{"_index":21,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["trata",{"_index":368,"title":{},"body":{"injectables/SyncService.html":{}}}],["través",{"_index":607,"title":{},"body":{"index.html":{}}}],["tree",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["true",{"_index":82,"title":{},"body":{"injectables/ApiClientService.html":{},"injectables/SyncService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"interfaces/MyDB.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":658,"title":{},"body":{"index.html":{}}}],["una",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/SyncService.html":{},"index.html":{}}}],["unit",{"_index":718,"title":{},"body":{"index.html":{}}}],["updatetask",{"_index":22,"title":{},"body":{"injectables/ApiClientService.html":{}}}],["upgrade(db",{"_index":76,"title":{},"body":{"injectables/ApiClientService.html":{},"miscellaneous/variables.html":{}}}],["usando",{"_index":566,"title":{},"body":{"index.html":{}}}],["usarlo",{"_index":293,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["use",{"_index":710,"title":{},"body":{"index.html":{}}}],["uso",{"_index":676,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":303,"title":{},"body":{"components/InstallAppComponent.html":{},"index.html":{}}}],["utiliza",{"_index":604,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":550,"title":{},"body":{"index.html":{}}}],["validacion",{"_index":353,"title":{},"body":{"injectables/SyncService.html":{}}}],["validar",{"_index":416,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["validators",{"_index":471,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["validators.required",{"_index":464,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["value",{"_index":24,"title":{},"body":{"injectables/ApiClientService.html":{},"components/AppComponent.html":{},"interfaces/MyDB.html":{},"injectables/SyncService.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["variable",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":749,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdadero",{"_index":414,"title":{},"body":{"components/TaskComponent.html":{}}}],["verificacion",{"_index":354,"title":{},"body":{"injectables/SyncService.html":{}}}],["verificador",{"_index":339,"title":{},"body":{"interfaces/MyDB.html":{},"interfaces/Task.html":{}}}],["verificar",{"_index":276,"title":{},"body":{"components/InstallAppComponent.html":{},"components/TaskComponent.html":{}}}],["version",{"_index":693,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":722,"title":{},"body":{"index.html":{}}}],["void",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskComponent.html":{},"components/TaskFormComponent.html":{}}}],["warning",{"_index":475,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["web",{"_index":549,"title":{},"body":{"index.html":{}}}],["whichever",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":502,"title":{},"body":{"components/TaskFormComponent.html":{}}}],["window.addeventlistener('online",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["window:beforeinstallprompt",{"_index":270,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["window:beforeinstallprompt(event",{"_index":273,"title":{},"body":{"components/InstallAppComponent.html":{}}}],["workbox",{"_index":639,"title":{},"body":{"index.html":{}}}],["worker",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["worker.js",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["x._id",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/InstallAppComponent.html":{},"injectables/SyncService.html":{},"components/TaskFormComponent.html":{},"index.html":{}}}],["ya",{"_index":366,"title":{},"body":{"injectables/SyncService.html":{}}}],["zone.js",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiClientService.html":{"url":"injectables/ApiClientService.html","title":"injectable - ApiClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-client.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para gestionar conexion don IndexDB\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getAll\n                            \n                            \n                                getUnsyncedTasks\n                            \n                            \n                                toggleTask\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async function (task: Task) {\n    task.isDone = false;\n    task.synced = false;\n    const id = (await db).add('taskStore', task);\n    return id;\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-client.service.ts:44\n                        \n                    \n\n            \n                \n                    Servicio para agreagr tarea\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    task\n                                                    \n                                                            datos de tarea\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async function (task: Task) {\n    if (task._id) {\n      (await db).delete('taskStore', task._id);\n    }\n    return task;\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-client.service.ts:55\n                        \n                    \n\n            \n                \n                    Servicio para eliminar tarea\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    task\n                                                    \n                                                            datos de tarea\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async function () {\n    const value = (await db).getAll('taskStore');\n    return value;\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-client.service.ts:35\n                        \n                    \n\n            \n                \n                    Servicio para obtener todas las tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedTasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async function (): Promise {\n    const allTasks = await (await db).getAll('taskStore');\n    return allTasks.filter(task => !task.synced);\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-client.service.ts:74\n                        \n                    \n\n            \n                \n                    Servicio para obtener tareas no sincronizadas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async function (task: Task) {\n    (await db).put('taskStore', task);\n    return task;\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-client.service.ts:66\n                        \n                    \n\n            \n                \n                    Servicio para actualziar tarea completada\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    task\n                                                    \n                                                            datos de tarea\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async function (task: Task) {\n    await (await db).put('taskStore', task);\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-client.service.ts:83\n                        \n                    \n\n            \n                \n                    Servicio para actualziar tarea sincronizada online\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    task\n                                                    \n                                                            datos de tarea\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task, MyDB } from '../models/tasks';\nimport { openDB } from 'idb';\n\n/**\n   * conexion a IndexDB\n   */\nconst db = openDB('my-db', 1, {\n  upgrade(db) {\n    const store = db.createObjectStore('taskStore',\n      {\n        keyPath: '_id',\n        autoIncrement: true\n      });\n\n  },\n});\n\n/**\n   * Servicio para gestionar conexion don IndexDB\n   */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiClientService {\n  \n  /**\n   * @ignore\n   */\n  constructor() { }\n  \n  /**\n   * Servicio para obtener todas las tareas\n   */\n  getAll = async function () {\n    const value = (await db).getAll('taskStore');\n    return value;\n  };\n  \n  /**\n   * Servicio para agreagr tarea\n   * @param {Task} task datos de tarea\n   */\n  addTask = async function (task: Task) {\n    task.isDone = false;\n    task.synced = false;\n    const id = (await db).add('taskStore', task);\n    return id;\n  };\n  \n  /**\n   * Servicio para eliminar tarea\n   * @param {Task} task datos de tarea\n   */\n  deleteTask = async function (task: Task) {\n    if (task._id) {\n      (await db).delete('taskStore', task._id);\n    }\n    return task;\n  };\n\n  /**\n   * Servicio para actualziar tarea completada\n   * @param {Task} task datos de tarea\n   */\n  toggleTask = async function (task: Task) {\n    (await db).put('taskStore', task);\n    return task;\n  };\n  \n  /**\n   * Servicio para obtener tareas no sincronizadas\n   */\n  getUnsyncedTasks = async function (): Promise {\n    const allTasks = await (await db).getAll('taskStore');\n    return allTasks.filter(task => !task.synced);\n  };\n  \n  /**\n   * Servicio para actualziar tarea sincronizada online\n   * @param {Task} task datos de tarea\n   */\n  updateTask = async function (task: Task) {\n    await (await db).put('taskStore', task);\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main del proyecto componente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Eliminar tarea\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    lista de tareas\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Inicilizador\nSe obtienen todas la tareas disponibles y se habilita el evento online\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n            \n                \n                    variable array, lista de tareas\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Task } from './models/tasks';\nimport { ApiClientService } from './services/api-client.service';\nimport { SyncService } from './services/sync.service';\n\n/**\n * Main del proyecto componente\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * variable array, lista de tareas\n   */\n  public tasks: Task[] = [];\n\n  /**\n   * @ignore\n   */\n  constructor(private db: ApiClientService, private syncService: SyncService) {\n  }\n  \n  /**\n   * Eliminar tarea \n   * @param {Task} task lista de tareas\n   */\n  deleteTask(task: Task) {\n    this.tasks = this.tasks.filter(x => x._id !== task._id);\n  }\n  \n  /**\n   * Inicilizador \n   * Se obtienen todas la tareas disponibles y se habilita el evento online\n   */\n  ngOnInit(): void {\n    this.db.getAll().then((tasks) => {\n      this.tasks = tasks;\n    });\n\n    window.addEventListener('online', () => {\n      console.log('Conexión recuperada, iniciando sincronización...');\n      this.syncService.syncTasks();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        To Do list\n      \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n      \n        No hay tareas disponibles¡Agrega una nueva!\n        \n      \n    \n  \n\n\n  \n    \n      \n        Todos los derechos reservados | Prueba Tecnica Developer Front Senior II | Lucasian Labs SAS 2025\n      \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    To Do list                                                                        No hay tareas disponibles¡Agrega una nueva!                                        Todos los derechos reservados | Prueba Tecnica Developer Front Senior II | Lucasian Labs SAS 2025            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InstallAppComponent', 'selector': 'app-install-app'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInstallAppComponent\n\nInstallAppComponent\n\nAppModule -->\n\nInstallAppComponent->AppModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nAppModule -->\n\nTaskComponent->AppModule\n\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\nAppModule -->\n\nTaskFormComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            InstallAppComponent\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\nimport { AppComponent } from './app.component';\nimport { InstallAppComponent } from './components/install-app/install-app.component';\nimport { TaskFormComponent } from './components/task-form/task-form.component';\nimport { TaskComponent } from './components/task/task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    TaskFormComponent,\n    InstallAppComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n    MatToolbarModule,\n    MatCardModule,\n    MatDialogModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InstallAppComponent.html":{"url":"components/InstallAppComponent.html","title":"component - InstallAppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InstallAppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/install-app/install-app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-install-app\n            \n\n\n\n            \n                styleUrls\n                ./install-app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./install-app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deferredPrompt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                installPWA\n                            \n                            \n                                    \n                                onBeforeInstallPrompt\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:beforeinstallprompt\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:beforeinstallprompt\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:beforeinstallprompt(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/install-app/install-app.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Hotlistener para verificar instlacion de app pwa\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        installPWA\n                        \n                    \n                \n            \n            \n                \ninstallPWA()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/install-app/install-app.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Se instala la app pwa por medio del prompt\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onBeforeInstallPrompt\n                        \n                    \n                \n            \n            \n                \n                        \n                    onBeforeInstallPrompt(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:beforeinstallprompt', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/components/install-app/install-app.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Hotlistener para verificar instlacion de app pwa\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deferredPrompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/install-app/install-app.component.ts:13\n                        \n                    \n\n            \n                \n                    variable para prompt de instalar app\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-install-app',\n  templateUrl: './install-app.component.html',\n  styleUrls: ['./install-app.component.css']\n})\nexport class InstallAppComponent implements OnInit {\n  \n  /**\n   * variable para prompt de instalar app\n   */\n  deferredPrompt: any;\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n  \n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n  \n  /**\n   * Hotlistener para verificar instlacion de app pwa\n   */\n  @HostListener('window:beforeinstallprompt', ['$event'])\n  onBeforeInstallPrompt(event: Event) {\n    // Prevenir el prompt automático y guardar el evento para usarlo más tarde\n    event.preventDefault();\n    this.deferredPrompt = event;\n    console.log('Evento beforeinstallprompt capturado');\n  }\n  \n  /**\n   * Se instala la app pwa por medio del prompt\n   */\n  installPWA() {\n    if (this.deferredPrompt) {\n      // Mostrar el prompt al usuario\n      this.deferredPrompt.prompt();\n      // Esperar la respuesta del usuario\n      this.deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('El usuario aceptó la instalación');\n        } else {\n          console.log('El usuario rechazó la instalación');\n        }\n        // Limpiar la referencia del prompt\n        this.deferredPrompt = null;\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n    Instalar App\n  \n    \n\n    \n                \n                    ./install-app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Instalar App  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InstallAppComponent', 'selector': 'app-install-app'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InstallAppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyDB.html":{"url":"interfaces/MyDB.html","title":"interface - MyDB","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyDB\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tasks.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface de IndexDB\n\n            \n\n            \n                Extends\n            \n            \n                        DBSchema\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            taskStore\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        taskStore\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskStore:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tabla de tareas en IndexDB\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DBSchema } from 'idb';\n\n/**\n   * Interface de Tarea\n   */\nexport interface Task {\n  /**\n   * Id de tarea\n   */\n  _id?: string,\n  /**\n   * Tabla de tareas API externa\n   */\n  id?: number;\n  /**\n   * Descripcion de tarea\n   */\n  content: string,\n  /**\n   * Titulo de tarea\n   */\n  title: string,\n  /**\n   * Fecha inicio tarea\n   */\n  dateini: string,\n  /**\n   * Fecha final tarea\n   */\n  datefin: string,\n  /**\n   * Verificador de tarea compelta o incompleta\n   */\n  isDone: boolean;\n  /**\n   * Verificador de sincronizacion de tarea con API externa\n   */\n  synced?: boolean;\n}\n\n/**\n   * Interface de IndexDB\n   */\nexport interface MyDB extends DBSchema {\n  /**\n   * Tabla de tareas en IndexDB\n   */\n  'taskStore': {\n    key: string;\n    value: Task;\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SyncService.html":{"url":"injectables/SyncService.html","title":"injectable - SyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sync.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para gestionar conexion API externa\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                syncTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        syncTasks\n                        \n                    \n                \n            \n            \n                \nsyncTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sync.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Servicio de validacion y verificacion para sincronizar tareas online\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.api+\"/todos\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sync.service.ts:17\n                        \n                    \n\n            \n                \n                    Variable de api servidor\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiClientService } from './api-client.service';\nimport { Task } from '../models/tasks';\nimport { environment } from '../../environments/environment';\n\n/**\n   * Servicio para gestionar conexion API externa\n   */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SyncService {\n  /**\n   * Variable de api servidor\n   */\n  private apiUrl = environment.api+\"/todos\";\n  \n  /**\n   * @ignore\n   */\n  constructor(private http: HttpClient, private apiClient: ApiClientService) {}\n  \n  /**\n   * Servicio de validacion y verificacion para sincronizar tareas online\n   */\n  syncTasks(): void {\n    this.apiClient.getUnsyncedTasks().then((tasks: Task[]) => {\n      tasks.forEach(task => {\n        if (task.id) {\n          // Si la tarea ya tiene ID, se trata de una actualización\n          this.http.put(`${this.apiUrl}/${task.id}`, task).subscribe({\n            next: response => {\n              task.synced = true;\n              this.apiClient.updateTask(task);\n              console.log(`Tarea actualizada en el servidor: ${task.id}`);\n            },\n            error: err => console.error('Error al actualizar tarea:', err)\n          });\n        } else {\n          // Si no tiene ID, se crea en el servidor\n          this.http.post(this.apiUrl, task).subscribe({\n            next: response => {\n              // Asigna el ID del servidor y marca la tarea como sincronizada\n              task.id = response.id;\n              task.synced = true;\n              this.apiClient.updateTask(task);\n              console.log(`Tarea creada en el servidor con id: ${response.id}`);\n            },\n            error: err => console.error('Error al crear tarea:', err)\n          });\n        }\n      });\n    }).catch(err => console.error('Error al obtener tareas sin sincronizar:', err));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tasks.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface de Tarea\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            datefin\n                                        \n                                \n                                \n                                        \n                                            dateini\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            synced\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Id de tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripcion de tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datefin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datefin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha final tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateini\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateini:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha inicio tarea\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tabla de tareas API externa\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Verificador de tarea compelta o incompleta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synced\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        synced:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Verificador de sincronizacion de tarea con API externa\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Titulo de tarea\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DBSchema } from 'idb';\n\n/**\n   * Interface de Tarea\n   */\nexport interface Task {\n  /**\n   * Id de tarea\n   */\n  _id?: string,\n  /**\n   * Tabla de tareas API externa\n   */\n  id?: number;\n  /**\n   * Descripcion de tarea\n   */\n  content: string,\n  /**\n   * Titulo de tarea\n   */\n  title: string,\n  /**\n   * Fecha inicio tarea\n   */\n  dateini: string,\n  /**\n   * Fecha final tarea\n   */\n  datefin: string,\n  /**\n   * Verificador de tarea compelta o incompleta\n   */\n  isDone: boolean;\n  /**\n   * Verificador de sincronizacion de tarea con API externa\n   */\n  synced?: boolean;\n}\n\n/**\n   * Interface de IndexDB\n   */\nexport interface MyDB extends DBSchema {\n  /**\n   * Tabla de tareas en IndexDB\n   */\n  'taskStore': {\n    key: string;\n    value: Task;\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n\n\n            \n                styleUrls\n                ./task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decoration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMe\n                            \n                            \n                                isChecked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                strike\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        taskItem\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task/task.component.ts:18\n                            \n                        \n                \n                    \n                        datos de tarea\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task/task.component.ts:22\n                            \n                        \n                \n                    \n                        Datos de tarea eliminada\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMe\n                        \n                    \n                \n            \n            \n                \ndeleteMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task/task.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Eliminar tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task/task.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Completar tarea\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task/task.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Inicializador para verificar tarea completada\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strike\n                        \n                    \n                \n            \n            \n                \nstrike(isDone: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task/task.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Verificar tarea completa\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDone\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    verdadero o falso para validar tarea completada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        decoration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task/task.component.ts:27\n                        \n                    \n\n            \n                \n                    decorador de texto tarea\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ApiClientService } from '../../services/api-client.service';\n\nimport { Task } from '../../models/tasks';\n\n\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  \n  /**\n   * datos de tarea\n   */\n  @Input() taskItem?: Task;\n  /**\n   * Datos de tarea eliminada\n   */\n  @Output() delete: EventEmitter = new EventEmitter();\n\n  /**\n   * decorador de texto tarea\n   */\n  public decoration: string = 'none';\n  \n  /**\n   * @ignore\n   */\n  constructor(private db: ApiClientService) { }\n\n  /**\n   * Eliminar tarea\n   */\n  deleteMe() {\n    if (this.taskItem) {\n      this.db.deleteTask(this.taskItem).then((oldTask) => {\n        this.delete.emit(oldTask);\n      }\n      );\n    }\n  }\n  \n  /**\n   * Verificar tarea completa\n   * @param {boolean} isDone verdadero o falso para validar tarea completada\n   */\n  strike(isDone: boolean) {\n    if (isDone) {\n      this.decoration = \"line-through\";\n    } else {\n      this.decoration = \"none\";\n    }\n\n  }\n  \n  /**\n   * Completar tarea\n   */\n  isChecked() {\n    if (this.taskItem) {\n      const newTask = Object.assign({}, this.taskItem);\n      newTask.isDone = !this.taskItem.isDone;\n      this.db.toggleTask(newTask).then((task) => {\n        this.taskItem = task;\n        this.strike(task.isDone);\n\n      });\n    }\n  }\n  \n  /**\n   * Inicializador para verificar tarea completada\n   */\n  ngOnInit(): void {\n    if (this.taskItem) this.strike(this.taskItem.isDone);\n  };\n\n}\n\n    \n\n    \n        \n  \n    {{taskItem?.title}}\n    {{taskItem?.dateini}} / {{taskItem?.datefin}}\n  \n  {{taskItem?.content}}\n  \n  \n    close\n  \n\n    \n\n    \n                \n                    ./task.component.css\n                \n                .example-spacer {\n  flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{taskItem?.title}}    {{taskItem?.dateini}} / {{taskItem?.datefin}}    {{taskItem?.content}}        close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InstallAppComponent', 'selector': 'app-install-app'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskFormComponent.html":{"url":"components/TaskFormComponent.html","title":"component - TaskFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-form/task-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-form\n            \n\n\n\n            \n                styleUrls\n                ./task-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                inputForm\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-form/task-form.component.ts:33\n                            \n                        \n                \n                    \n                        variable array, lista de tareas compartido por componentes\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSubmit(input: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/task-form/task-form.component.ts:49\n                        \n                    \n\n\n            \n                \n                        OnSubmit para validar formulario y envio de datos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    datos del formulario ingresados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        inputForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    content: new FormControl('', Validators.required),\n    title: new FormControl('', Validators.required),\n    dateini: new FormControl('', Validators.required),\n    datefin: new FormControl('', Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:22\n                        \n                    \n\n            \n                \n                    FormGrup de formualrio de tareas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'success'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-form/task-form.component.ts:17\n                        \n                    \n\n            \n                \n                    variable stado del form\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ApiClientService } from '../../services/api-client.service';\nimport { Task } from '../../models/tasks';\nimport { SyncService } from 'src/app/services/sync.service';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnInit {\n  \n  /**\n   * variable stado del form\n   */\n  public status: string = 'success';\n  \n  /**\n   * FormGrup de formualrio de tareas\n   */\n  public inputForm: FormGroup = new FormGroup({\n    content: new FormControl('', Validators.required),\n    title: new FormControl('', Validators.required),\n    dateini: new FormControl('', Validators.required),\n    datefin: new FormControl('', Validators.required)\n  });\n\n  /**\n   * variable array, lista de tareas compartido por componentes\n   */\n  @Input()\n  tasks!: Task[];\n\n  /**\n   * @ignore\n   */\n  constructor(private db: ApiClientService, private syncService: SyncService) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * OnSubmit para validar formulario y envio de datos\n   * @param {Task} input datos del formulario ingresados\n   */\n  handleSubmit(input: Task): void {\n    if (this.inputForm.invalid) {\n      this.status = 'warning';\n      return;\n    }\n\n    // Agregar la tarea en IndexedDB (marca synced = false automáticamente)\n    this.db.addTask(input)\n      .then((id: string) => {\n        this.status = 'success';\n        input._id = id;\n        this.tasks.push(input);\n        this.inputForm.reset();\n\n        // Si está en línea, intenta sincronizar inmediatamente la tarea\n        if (navigator.onLine) {\n          console.log('En línea: sincronizando tarea de inmediato...');\n          this.syncService.syncTasks();\n        } else {\n          console.log('Sin conexión: la tarea se sincronizará cuando se recupere la conexión.');\n        }\n      })\n      .catch(err => {\n        console.error('Error al agregar la tarea en IndexedDB:', err);\n        this.status = 'error';\n      });\n  }\n}\n\n    \n\n    \n        \n  Agregar tarea\n  \n    \n      \n        \n          Tarea\n          \n        \n      \n      \n        \n          Descripcion\n          \n        \n      \n      \n        \n          Fecha Inicio\n          \n        \n      \n      \n        \n          Fecha Fin\n          \n        \n      \n      \n        Agregar\n      \n    \n  \n\n    \n\n    \n                \n                    ./task-form.component.css\n                \n                form {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n}\n\ninput {\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Agregar tarea                              Tarea                                                Descripcion                                                Fecha Inicio                                                Fecha Fin                                      Agregar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'InstallAppComponent', 'selector': 'app-install-app'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskFormComponent', 'selector': 'app-task-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/install-app/install-app.component.ts\n            \n            component\n            InstallAppComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/task-form/task-form.component.ts\n            \n            component\n            TaskFormComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/models/tasks.ts\n            \n            interface\n            MyDB\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/tasks.ts\n            \n            interface\n            Task\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/api-client.service.ts\n            \n            injectable\n            ApiClientService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/services/api-client.service.ts\n            \n            variable\n            db\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/sync.service.ts\n            \n            injectable\n            SyncService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.0.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/material : ^13.3.8\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @angular/service-worker : ~13.3.0\n        \n            bootstrap : ^5.3.3\n        \n            idb : ^7.0.1\n        \n            jquery : ^3.7.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTo Do List PWA\nEsta es una aplicación de lista de tareas desarrollada como una Progressive Web App (PWA) utilizando Angular 13. El proyecto sigue el principio Offline-First, permitiendo al usuario gestionar tareas (crear, actualizar, eliminar) sin conexión y sincronizar los cambios con una API externa cuando se recupere la conectividad.\nPropósito del Desarrollo\nEl objetivo de este proyecto es demostrar la capacidad de:\n\nImplementar una PWA usando Angular y su Service Worker nativo.\nGestionar datos sin conexión mediante IndexedDB con la biblioteca idb.\nSincronizar datos con una API externa (simulada con JSONPlaceholder) al detectar la reconexión.\nOfrecer una experiencia de instalación personalizada mediante el manejo del evento beforeinstallprompt.\nAplicar buenas prácticas en arquitectura, rendimiento y experiencia de usuario.\n\nArquitectura y Diseño\nLa solución se compone de los siguientes componentes y servicios:\n\nAngular App (PWA):\n\nContiene los componentes principales, como el formulario de tareas (TaskFormComponent), la lista de tareas y el componente de instalación (app-install).\n\n\nService Worker (Angular):\n\nSe configura mediante ngsw-config.json para precargar y cachear el app shell y los activos críticos.\nNota: El Service Worker se activa únicamente en producción.\n\n\nIndexedDB (idb):\n\nSe utiliza para almacenar localmente las tareas a través del servicio ApiClientService.\n\n\nSyncService:\n\nDetecta el evento online y sincroniza automáticamente las tareas no sincronizadas con la API externa.\n\n\nAPI Externa (JSONPlaceholder):\n\nSe utiliza para simular operaciones CRUD en la sincronización, demostrando la lógica de sincronización.\n\n\n\nAbordaje de Requerimientos\n1. Configuración como PWA\n\nManifest.json:\nSe configuró el archivo manifest.webmanifest con nombre, iconos y propiedades para la instalación.\n\n\nService Worker:\nSe utiliza el Service Worker nativo de Angular, configurado en ngsw-config.json.\nSe define la estrategia de precarga y cacheo de recursos críticos.\n\n\nDecisión de Diseño:\nSe optó por el SW nativo de Angular, eliminando la necesidad de integrar herramientas externas como Workbox.\n\n\n\n2. Manejo de Datos sin Conexión\n\nAlmacenamiento en IndexedDB:\nImplementado a través del servicio ApiClientService utilizando la biblioteca idb.\n\n\nDetección de Conectividad:\nSe implementó en el AppComponent utilizando el evento online para disparar la sincronización.\n\n\nSincronización con API Externa:\nEl servicio SyncService recorre las tareas no sincronizadas y las sincroniza con JSONPlaceholder.\n\n\nDecisión de Diseño:\nSe diferenciaron las operaciones para tareas nuevas (sin ID) y existentes (con ID) para actualizar la persistencia.\n\n\n\n3. Habilitar la Instalación de la PWA\n\nBotón de Instalación y Evento beforeinstallprompt:\nSe creó el componente app-install-app que maneja el evento beforeinstallprompt y muestra un botón para la instalación.\n\n\nDecisión de Diseño:\nSe personalizó la experiencia de instalación, permitiendo al usuario instalar la app según su conveniencia.\n\n\n\n4. Funcionalidades Extra (Opcional)\n\nNotificaciones Push:\nPendiente de implementación. Se contempla agregar notificaciones usando Firebase Cloud Messaging o la Web Push API en una siguiente iteración.\n\n\n\nInstalación y Uso\nRequisitos\n\nNode.js y npm instalados.\nAngular CLI instalado globalmente.\n\nInstalación\n\nClona el repositorio:Example :git clone https://github.com/70r63x/to-do-list.git\ncd to-do-list\n\nThis project was generated with Angular CLI version 13.3.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInstallAppComponent\n\nInstallAppComponent\n\nAppModule -->\n\nInstallAppComponent->AppModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nAppModule -->\n\nTaskComponent->AppModule\n\n\n\n\n\nTaskFormComponent\n\nTaskFormComponent\n\nAppModule -->\n\nTaskFormComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            db   (src/.../api-client.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/api-client.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : openDB('my-db', 1, {\n  upgrade(db) {\n    const store = db.createObjectStore('taskStore',\n      {\n        keyPath: '_id',\n        autoIncrement: true\n      });\n\n  },\n})\n                    \n                \n\n            \n                \n                    conexion a IndexDB\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  api: \"https://jsonplaceholder.typicode.com\"\n}\n                    \n                \n\n            \n                \n                    Variable de ambiente prod\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  api: \"https://jsonplaceholder.typicode.com\"\n}\n                    \n                \n\n            \n                \n                    Variable de ambiente test\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
